
/*
 * Copyright (C) 2020 iCub Tech - Istituto Italiano di Tecnologia
 * Author:  Marco Accame
 * email:   marco.accame@iit.it
 * NOTE:    this code was originally developed for
 *          the ventilator project
*/


// --------------------------------------------------------------------------------------------------------------------
// - public interface
// --------------------------------------------------------------------------------------------------------------------

#include "vnt_tools_Feeder.h"




// --------------------------------------------------------------------------------------------------------------------
// - external dependencies
// --------------------------------------------------------------------------------------------------------------------

#include <array>


// --------------------------------------------------------------------------------------------------------------------
// - pimpl: private implementation (see scott meyers: item 22 of effective modern c++, item 31 of effective c++
// --------------------------------------------------------------------------------------------------------------------

    static constexpr std::array<vnt::tools::dataFmt, 150> input = 
    {
        2048	,
        2064.384	,
        2080.7681	,
        2097.1521	,
        2113.5361	,
        2129.9199	,
        2146.304	,
        2162.688	,
        2179.072	,
        2195.4561	,
        2211.8401	,
        2228.2241	,
        2244.6079	,
        2260.9919	,
        2277.376	,
        2293.76	,
        2310.144	,
        2326.5281	,
        2342.9121	,
        2359.2959	,
        2375.6802	,
        2392.064	,
        2408.448	,
        2424.832	,
        2441.2161	,
        2457.6001	,
        2473.9839	,
        2490.3682	,
        2506.752	,
        2523.136	,
        2539.52	,
        2555.9041	,
        2572.2881	,
        2588.6719	,
        2605.0562	,
        2621.4399	,
        2637.824	,
        2654.208	,
        2670.592	,
        2686.9761	,
        2703.3599	,
        2719.7441	,
        2736.1279	,
        2752.5122	,
        2768.896	,
        2785.28	,
        2801.6641	,
        2818.0479	,
        2834.4321	,
        2850.8159	,
        2867.2002	,
        2883.584	,
        2899.968	,
        2916.3521	,
        2932.7361	,
        2949.1201	,
        2965.5039	,
        2981.8882	,
        2998.272	,
        3014.656	,
        3031.04	,
        3047.4241	,
        3063.8081	,
        3080.1919	,
        3096.5762	,
        3112.96	,
        3129.344	,
        3145.728	,
        3162.1121	,
        3178.4961	,
        3194.8799	,
        3211.2642	,
        3227.6479	,
        3244.032	,
        3260.416	,
        3276.8	,
        3293.1841	,
        3309.5679	,
        3325.9521	,
        3342.3359	,
        3358.72	,
        3375.104	,
        3391.488	,
        3407.8721	,
        3424.2559	,
        3440.6401	,
        3457.0239	,
        3473.4082	,
        3489.792	,
        3506.176	,
        3522.5601	,
        3538.9438	,
        3555.3281	,
        3571.7119	,
        3588.0962	,
        3604.48	,
        3620.864	,
        3637.248	,
        3653.6321	,
        3670.0161	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
        3686.3999	,
   
    };
    
    static constexpr std::array<vnt::tools::Result, 150> result = 
    {
        vnt::tools::Result(	40.708961	,	4.964314	,	0	,	0	),
        vnt::tools::Result(	41.967339	,	4.9667726	,	5.0985994	,	0.20325501	),
        vnt::tools::Result(	42.88678	,	4.973876	,	5.3025436	,	0.65350235	),
        vnt::tools::Result(	43.480446	,	4.988204	,	5.5064883	,	1.2786525	),
        vnt::tools::Result(	43.606361	,	5.0118656	,	5.7104321	,	2.1605303	),
        vnt::tools::Result(	43.272293	,	5.0465531	,	5.9143772	,	3.2295389	),
        vnt::tools::Result(	42.597908	,	5.0935917	,	6.1183186	,	4.3370037	),
        vnt::tools::Result(	41.758514	,	5.1539812	,	6.3222628	,	5.3246717	),
        vnt::tools::Result(	40.928253	,	5.2284369	,	6.5262074	,	6.0765667	),
        vnt::tools::Result(	40.23682	,	5.3174262	,	6.7301512	,	6.5455494	),
        vnt::tools::Result(	39.74736	,	5.4211998	,	6.9340963	,	6.7545586	),
        vnt::tools::Result(	39.456169	,	5.5398221	,	7.1380401	,	6.7785602	),
        vnt::tools::Result(	39.309288	,	5.6731963	,	7.3419852	,	6.716506	),
        vnt::tools::Result(	39.228058	,	5.8210878	,	7.5459261	,	6.6628647	),
        vnt::tools::Result(	39.135105	,	5.9831481	,	7.7498703	,	6.6861606	),
        vnt::tools::Result(	38.974194	,	6.1589293	,	7.9538155	,	6.8184714	),
        vnt::tools::Result(	38.720325	,	6.3479047	,	8.1577587	,	7.0561457	),
        vnt::tools::Result(	38.379742	,	6.5494814	,	8.3617048	,	7.3691244	),
        vnt::tools::Result(	37.982052	,	6.7630138	,	8.5656481	,	7.7146559	),
        vnt::tools::Result(	37.568268	,	6.9878187	,	8.7695932	,	8.0510178	),
        vnt::tools::Result(	37.178616	,	7.2231789	,	8.9735346	,	8.3478479	),
        vnt::tools::Result(	36.843235	,	7.4683595	,	9.1774817	,	8.5912743	),
        vnt::tools::Result(	36.577408	,	7.7226129	,	9.381423	,	8.7837467	),
        vnt::tools::Result(	36.381565	,	7.9851871	,	9.5853672	,	8.9398022	),
        vnt::tools::Result(	36.244907	,	8.2553291	,	9.7893124	,	9.0797472	),
        vnt::tools::Result(	36.150993	,	8.5322933	,	9.9932556	,	9.2233095	),
        vnt::tools::Result(	36.083424	,	8.8153419	,	10.197201	,	9.3848495	),
        vnt::tools::Result(	36.030186	,	9.1037521	,	10.401142	,	9.5709858	),
        vnt::tools::Result(	35.985886	,	9.3968182	,	10.605089	,	9.7806864	),
        vnt::tools::Result(	35.951771	,	9.6938543	,	10.809031	,	10.007248	),
        vnt::tools::Result(	35.934048	,	9.9941998	,	11.012975	,	10.241249	),
        vnt::tools::Result(	35.941292	,	10.297216	,	11.21692	,	10.473518	),
        vnt::tools::Result(	35.981804	,	10.60229	,	11.420863	,	10.697372	),
        vnt::tools::Result(	36.061596	,	10.908834	,	11.624809	,	10.909728	),
        vnt::tools::Result(	36.183357	,	11.216288	,	11.82875	,	11.111069	),
        vnt::tools::Result(	36.346462	,	11.52412	,	12.032698	,	11.304522	),
        vnt::tools::Result(	36.547756	,	11.831833	,	12.236638	,	11.494482	),
        vnt::tools::Result(	36.78278	,	12.138947	,	12.440582	,	11.68523	),
        vnt::tools::Result(	37.047016	,	12.445015	,	12.644527	,	11.879889	),
        vnt::tools::Result(	37.33683	,	12.749619	,	12.848472	,	12.079905	),
        vnt::tools::Result(	37.649986	,	13.05237	,	13.052417	,	12.285055	),
        vnt::tools::Result(	37.985634	,	13.3529	,	13.256357	,	12.493887	),
        vnt::tools::Result(	38.343971	,	13.650872	,	13.460305	,	12.704352	),
        vnt::tools::Result(	38.725677	,	13.945974	,	13.664248	,	12.914454	),
        vnt::tools::Result(	39.13134	,	14.237914	,	13.868194	,	13.122735	),
        vnt::tools::Result(	39.561035	,	14.52643	,	14.072136	,	13.32852	),
        vnt::tools::Result(	40.014088	,	14.811278	,	14.276079	,	13.531908	),
        vnt::tools::Result(	40.489086	,	15.092241	,	14.480024	,	13.733578	),
        vnt::tools::Result(	40.984055	,	15.369121	,	14.683965	,	13.934483	),
        vnt::tools::Result(	41.496727	,	15.641738	,	14.887913	,	14.135553	),
        vnt::tools::Result(	42.024796	,	15.909932	,	15.091855	,	14.337473	),
        vnt::tools::Result(	42.566166	,	16.173565	,	15.295801	,	14.540556	),
        vnt::tools::Result(	43.119026	,	16.432512	,	15.499743	,	14.744757	),
        vnt::tools::Result(	43.681881	,	16.686668	,	15.703687	,	14.94976	),
        vnt::tools::Result(	44.253456	,	16.935946	,	15.907632	,	15.155121	),
        vnt::tools::Result(	44.832603	,	17.180269	,	16.111576	,	15.360403	),
        vnt::tools::Result(	45.418144	,	17.419579	,	16.315521	,	15.565291	),
        vnt::tools::Result(	46.008816	,	17.653824	,	16.519463	,	15.769638	),
        vnt::tools::Result(	46.603195	,	17.882975	,	16.72341	,	15.973464	),
        vnt::tools::Result(	47.199715	,	18.107006	,	16.927351	,	16.176914	),
        vnt::tools::Result(	47.796707	,	18.325911	,	17.131294	,	16.380199	),
        vnt::tools::Result(	48.392441	,	18.539682	,	17.335239	,	16.583519	),
        vnt::tools::Result(	48.985207	,	18.748335	,	17.539185	,	16.787024	),
        vnt::tools::Result(	49.573357	,	18.95188	,	17.74313	,	16.99078	),
        vnt::tools::Result(	50.155331	,	19.150349	,	17.947069	,	17.194778	),
        vnt::tools::Result(	50.72963	,	19.343763	,	18.151018	,	17.398951	),
        vnt::tools::Result(	51.294857	,	19.532171	,	18.354959	,	17.603201	),
        vnt::tools::Result(	51.849632	,	19.715612	,	18.558903	,	17.807436	),
        vnt::tools::Result(	52.392624	,	19.89414	,	18.762846	,	18.011585	),
        vnt::tools::Result(	52.92247	,	20.06781	,	18.966791	,	18.215616	),
        vnt::tools::Result(	53.437832	,	20.236687	,	19.170736	,	18.419535	),
        vnt::tools::Result(	53.937336	,	20.400835	,	19.374678	,	18.623371	),
        vnt::tools::Result(	54.419621	,	20.560329	,	19.578627	,	18.827173	),
        vnt::tools::Result(	54.883331	,	20.715237	,	19.782566	,	19.030983	),
        vnt::tools::Result(	55.327133	,	20.865633	,	19.986509	,	19.234833	),
        vnt::tools::Result(	55.749741	,	21.0116	,	20.190454	,	19.43874	),
        vnt::tools::Result(	56.14991	,	21.153215	,	20.3944	,	19.642696	),
        vnt::tools::Result(	56.526421	,	21.290562	,	20.598345	,	19.846689	),
        vnt::tools::Result(	56.878105	,	21.423717	,	20.802284	,	20.050697	),
        vnt::tools::Result(	57.203819	,	21.552773	,	21.006233	,	20.254702	),
        vnt::tools::Result(	57.502449	,	21.677813	,	21.210175	,	20.458687	),
        vnt::tools::Result(	57.772911	,	21.798923	,	21.41412	,	20.662647	),
        vnt::tools::Result(	58.014118	,	21.916187	,	21.618061	,	20.866585	),
        vnt::tools::Result(	58.225021	,	22.029696	,	21.822008	,	21.070507	),
        vnt::tools::Result(	58.404602	,	22.13954	,	22.025951	,	21.274422	),
        vnt::tools::Result(	58.551838	,	22.245806	,	22.229895	,	21.478338	),
        vnt::tools::Result(	58.665756	,	22.348581	,	22.43384	,	21.682262	),
        vnt::tools::Result(	58.745399	,	22.447948	,	22.637779	,	21.886196	),
        vnt::tools::Result(	58.789848	,	22.544001	,	22.841728	,	22.090141	),
        vnt::tools::Result(	58.798203	,	22.63682	,	23.045671	,	22.294096	),
        vnt::tools::Result(	58.769588	,	22.726492	,	23.249615	,	22.498055	),
        vnt::tools::Result(	58.703171	,	22.813105	,	23.45356	,	22.702013	),
        vnt::tools::Result(	58.598129	,	22.896738	,	23.657499	,	22.905968	),
        vnt::tools::Result(	58.453674	,	22.977478	,	23.861448	,	23.109917	),
        vnt::tools::Result(	58.26902	,	23.055401	,	24.06539	,	23.313858	),
        vnt::tools::Result(	58.043419	,	23.130592	,	24.269337	,	23.517799	),
        vnt::tools::Result(	57.776154	,	23.203135	,	24.473276	,	23.721737	),
        vnt::tools::Result(	57.466507	,	23.273104	,	24.677223	,	23.925674	),
        vnt::tools::Result(	57.113808	,	23.34058	,	24.881168	,	24.129612	),
        vnt::tools::Result(	56.717384	,	23.40564	,	25.085112	,	24.333551	),
        vnt::tools::Result(	56.2766	,	23.468355	,	25.289055	,	24.537495	),
        vnt::tools::Result(	55.790833	,	23.528799	,	25.492996	,	24.74144	),
        vnt::tools::Result(	55.268826	,	23.587038	,	25.492996	,	24.937256	),
        vnt::tools::Result(	54.723427	,	23.643145	,	25.492996	,	25.115391	),
        vnt::tools::Result(	54.166622	,	23.697189	,	25.492996	,	25.26955	),
        vnt::tools::Result(	53.615749	,	23.749228	,	25.492996	,	25.390427	),
        vnt::tools::Result(	53.087357	,	23.79933	,	25.492996	,	25.471863	),
        vnt::tools::Result(	52.59272	,	23.847561	,	25.492996	,	25.513901	),
        vnt::tools::Result(	52.135857	,	23.893986	,	25.492996	,	25.522903	),
        vnt::tools::Result(	51.713821	,	23.938658	,	25.492996	,	25.509628	),
        vnt::tools::Result(	51.318806	,	23.98164	,	25.492996	,	25.486282	),
        vnt::tools::Result(	50.940971	,	24.022991	,	25.492996	,	25.463669	),
        vnt::tools::Result(	50.571194	,	24.062763	,	25.492996	,	25.449158	),
        vnt::tools::Result(	50.203041	,	24.101011	,	25.492996	,	25.445869	),
        vnt::tools::Result(	49.833664	,	24.137791	,	25.492996	,	25.453016	),
        vnt::tools::Result(	49.463558	,	24.173149	,	25.492996	,	25.467102	),
        vnt::tools::Result(	49.095615	,	24.20714	,	25.492996	,	25.48349	),
        vnt::tools::Result(	48.733734	,	24.239803	,	25.492996	,	25.497871	),
        vnt::tools::Result(	48.381546	,	24.271189	,	25.492996	,	25.507317	),
        vnt::tools::Result(	48.04147	,	24.30134	,	25.492996	,	25.510719	),
        vnt::tools::Result(	47.714298	,	24.330305	,	25.492996	,	25.50869	),
        vnt::tools::Result(	47.399292	,	24.358128	,	25.492996	,	25.503027	),
        vnt::tools::Result(	47.094612	,	24.384844	,	25.492996	,	25.496012	),
        vnt::tools::Result(	46.797981	,	24.410498	,	25.492996	,	25.489737	),
        vnt::tools::Result(	46.507248	,	24.435123	,	25.492996	,	25.48563	),
        vnt::tools::Result(	46.220875	,	24.458763	,	25.492996	,	25.484247	),
        vnt::tools::Result(	45.938065	,	24.481447	,	25.492996	,	25.485332	),
        vnt::tools::Result(	45.658783	,	24.503216	,	25.492996	,	25.488071	),
        vnt::tools::Result(	45.383507	,	24.524103	,	25.492996	,	25.491413	),
        vnt::tools::Result(	45.11293	,	24.54414	,	25.492996	,	25.49439	),
        vnt::tools::Result(	44.847717	,	24.563364	,	25.492996	,	25.496344	),
        vnt::tools::Result(	44.588257	,	24.581804	,	25.492996	,	25.497017	),
        vnt::tools::Result(	44.334591	,	24.599489	,	25.492996	,	25.496529	),
        vnt::tools::Result(	44.086441	,	24.616451	,	25.492996	,	25.495262	),
        vnt::tools::Result(	43.843288	,	24.632717	,	25.492996	,	25.493711	),
        vnt::tools::Result(	43.604519	,	24.648317	,	25.492996	,	25.492329	),
        vnt::tools::Result(	43.36956	,	24.663275	,	25.492996	,	25.491419	),
        vnt::tools::Result(	43.137974	,	24.677618	,	25.492996	,	25.491106	),
        vnt::tools::Result(	42.909473	,	24.691364	,	25.492996	,	25.491333	),
        vnt::tools::Result(	42.683964	,	24.704548	,	25.492996	,	25.491924	),
        vnt::tools::Result(	42.461441	,	24.717178	,	25.492996	,	25.492649	),
        vnt::tools::Result(	42.241978	,	24.729284	,	25.492996	,	25.493296	),
        vnt::tools::Result(	42.02562	,	24.740879	,	25.492996	,	25.493721	),
        vnt::tools::Result(	41.81237	,	24.751986	,	25.492996	,	25.493868	),
        vnt::tools::Result(	41.602154	,	24.762619	,	25.492996	,	25.493763	),
        vnt::tools::Result(	41.39484	,	24.7728	,	25.492996	,	25.493486	),
        vnt::tools::Result(	41.190224	,	24.782541	,	25.492996	,	25.493149	),
        vnt::tools::Result(	40.988117	,	24.791868	,	25.492996	,	25.492846	),
        vnt::tools::Result(	40.788322	,	24.8008	,	25.492996	,	25.492647	),
        vnt::tools::Result(	40.590679	,	24.809347	,	25.492996	,	25.492577	)
        
    };
    
struct vnt::tools::Feeder::Impl
{  
    
    size_t counter {0};
    
    Impl() 
    { 
         
    }
    

    bool get(dataFmt &v)
    {
        
        v = (counter<150) ? input[counter] : 0;
        counter ++;
        return counter < 150;
    }
    
    bool check(const Result &r, vnt::tools::Result &ref)
    {
        if(counter<=150)
        {
            const Result &t = result[counter-1];
            ref = t;
            if((t.v0 == r.v0) && (t.v1 == r.v1) && (t.v2 == r.v2) && (t.v3 == r.v3))
            {
                return true;
            }                
        }
        return false;
    }
    
                      
};



// --------------------------------------------------------------------------------------------------------------------
// - all the rest
// --------------------------------------------------------------------------------------------------------------------



vnt::tools::Feeder::Feeder() 
: pImpl(new Impl)
{   

}

vnt::tools::Feeder::~Feeder()
{   
    delete pImpl;
}





bool vnt::tools::Feeder::get(dataFmt &v)
{
    return pImpl->get(v);
}


bool vnt::tools::Feeder::check(const Result &r, Result &ref)
{
    return pImpl->check(r, ref);
}

// - end-of-file (leave a blank line after)----------------------------------------------------------------------------

